name: Deploy to Azure Container App (main)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: |
          pip install flake8
          flake8 app.py || true

      - name: Bandit
        run: |
          pip install bandit
          bandit -r . || true

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build image
        run: docker build -t houracr.azurecr.io/hour-app:${{ github.sha }} .

      - name: Push to ACR
        run: |
          az acr login --name houracr
          docker push houracr.azurecr.io/hour-app:${{ github.sha }}

      - name: Ensure container-app env
        run: |
          az containerapp env show --name hour-env --resource-group my-rg --query name -o tsv \
          || az containerapp env create --name hour-env --resource-group my-rg --location westeurope

      - name: Create/Update app
        run: |
          az containerapp show --name hour-app --resource-group my-rg --query name -o tsv \
          || az containerapp create --name hour-app --resource-group my-rg \
               --environment hour-env --image houracr.azurecr.io/hour-app:${{ github.sha }} \
               --target-port 5000 --ingress external --registry-server houracr.azurecr.io \
               --cpu 0.25 --memory 0.5Gi
          az containerapp update --name hour-app --resource-group my-rg \
               --image houracr.azurecr.io/hour-app:${{ github.sha }} --cpu 0.25 --memory 0.5Gi

      - name: Get app URL
        id: url
        run: |
          echo "APP_URL=https://$(az containerapp show --name hour-app --resource-group my-rg \
            --query properties.configuration.ingress.fqdn -o tsv)" >> $GITHUB_ENV
          curl -f ${{ env.APP_URL }}

      - name: ZAP baseline (HTML+SARIF)
        run: |
          mkdir -p zap-results
          docker run --rm -v ${{ github.workspace }}/zap-results:/zap/wrk ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t ${{ env.APP_URL }} -r zap-report.html -x zap-report.sarif -T 60 || true

      - name: Upload HTML artefact
        uses: actions/upload-artifact@v4
        with:
          name: zap-html-report
          path: zap-results/zap-report.html

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: zap-results/zap-report.sarif

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: houracr.azurecr.io/hour-app:${{ github.sha }}

  publish-zap-pages:
    needs: build-and-deploy
    if: needs.build-and-deploy.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: zap-html-report
          path: zap-report

      - uses: actions/configure-pages@v3

      - run: |
          mkdir -p public/zap/main
          cp zap-report/zap-report.html public/zap/main/index.html

      - uses: actions/upload-pages-artifact@v2
        with:
          path: public

      - uses: actions/deploy-pages@v2

      - run: |
          echo "::notice title=ZAP Report::[View ZAP Report](https://${{ github.repository_owner }}.github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)/zap/main/)"
